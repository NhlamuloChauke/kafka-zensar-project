version: '2'

services:

  kafka:
    image: wurstmeister/kafka
    container_name: 'kafka'
    environment:
      JVM_OPTS: -Xmx1g -Xms1g -XX:MaxPermSize=1024m
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: person-json-file-topic:1:1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092

    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093

  zookeeper:
    container_name: 'zookeeper'
    image: wurstmeister/zookeeper

  kafka-mysql-db:
   container_name:  kafka-mysql-db
   image: mysql/mysql-server:5.7
   environment:
     MYSQL_DATABASE: root
     MYSQL_ROOT_PASSWORD: password
     MYSQL_ROOT_HOST: '%'
   ports:
    - "3306:3306"
   volumes:
    - ./mysql-init:/docker-entrypoint-initdb.d/:ro
   restart: always

  kafka-consumer-file:
    image:  kafka-consumer-file
    container_name:  kafka-consumer-file
    build:
      context: ./kafka-consumer-file
    ports:
     - 9001:9001
    depends_on:
     - kafka
     - zookeeper

  kafka-producer-file:
    image:  kafka-producer-file
    container_name:  kafka-producer-file
    build:
      context: ./kafka-producer-file
    ports:
     - 9002:9002
    volumes:
     - ./data:/data
    depends_on:
      - kafka
      - zookeeper

    